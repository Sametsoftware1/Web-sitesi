import requests
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# Kripto para fiyatlarını almak için fonksiyon
def get_crypto_price(crypto):
    url = f"https://api.coingecko.com/api/v3/simple/price?ids={crypto}&vs_currencies=usd"
    response = requests.get(url)
    data = response.json()
    try:
        price = data[crypto]['usd']
        return price
    except KeyError:
        return None

# Botun /start komutu
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Selam, Hoşgeldin! Komutlar: /bitcoin, /ethereum, /ripple, /bnb, /solana")

# Botun /bitcoin komutu
async def bitcoin(update: Update, context: ContextTypes.DEFAULT_TYPE):
    price = get_crypto_price('bitcoin')
    if price:
        await update.message.reply_text(f"Güncel Bitcoin (BTC) Fiyatı: ${price}")
    else:
        await update.message.reply_text("Üzgünüm, Bitcoin fiyatını getiremedim. Lütfen tekrar deneyin.")

# Botun /ethereum komutu
async def ethereum(update: Update, context: ContextTypes.DEFAULT_TYPE):
    price = get_crypto_price('ethereum')
    if price:
        await update.message.reply_text(f"Güncel Ethereum (ETH) Fiyatı: ${price}")
    else:
        await update.message.reply_text("Üzgünüm, Ethereum fiyatını getiremedim. Lütfen tekrar deneyin.")

# Botun /ripple komutu
async def ripple(update: Update, context: ContextTypes.DEFAULT_TYPE):
    price = get_crypto_price('ripple')
    if price:
        await update.message.reply_text(f"Güncel Ripple (XRP) Fiyatı: ${price}")
    else:
        await update.message.reply_text("Üzgünüm, Ripple fiyatını getiremedim. Lütfen tekrar deneyin.")

# Botun /bnb komutu
async def bnb(update: Update, context: ContextTypes.DEFAULT_TYPE):
    price = get_crypto_price('binancecoin')
    if price:
        await update.message.reply_text(f"Güncel Binance Coin (BNB) Fiyatı: ${price}")
    else:
        await update.message.reply_text("Üzgünüm, Binance Coin fiyatını getiremedim. Lütfen tekrar deneyin.")

# Botun /solana komutu
async def solana(update: Update, context: ContextTypes.DEFAULT_TYPE):
    price = get_crypto_price('solana')
    if price:
        await update.message.reply_text(f"Güncel Solana (SOL) Fiyatı: ${price}")
    else:
        await update.message.reply_text("Üzgünüm, Solana fiyatını getiremedim. Lütfen tekrar deneyin.")

# API anahtarınızı buraya koyun
API_TOKEN = "8095367671:AAEWzRaGgKZ9niUg2iCgCmD59MzVVw4hV3c"

app = ApplicationBuilder().token(API_TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("bitcoin", bitcoin))
app.add_handler(CommandHandler("ethereum", ethereum))
app.add_handler(CommandHandler("ripple", ripple))
app.add_handler(CommandHandler("bnb", bnb))
app.add_handler(CommandHandler("solana", solana))

app.run_polling()
